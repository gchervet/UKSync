<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly Name="System.Configuration" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.Net" #>
<#@ assembly name="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ output extension=".cs" #>

<#
    const string relativePathFile = @"..\..\DAL\App.Config";

    const string domainNamespace = "Domain";

    string inputFile = Host.ResolvePath(relativePathFile);

    var doc = new XmlDocument();
    doc.Load(inputFile);
            
    XDocument xdoc;
    using (var nodeReader = new XmlNodeReader(doc))
    {
        nodeReader.MoveToContent();
        xdoc = XDocument.Load(nodeReader);
    }

    string query = (from c in xdoc.Descendants("add")
            where (string)c.Attribute("name") == "ModelEntities"
            select (string)c.Attribute("connectionString")).FirstOrDefault();

    string query_sinceConnString = query.Substring(query.ToLower().IndexOf("connection string=\""));
    query_sinceConnString = query_sinceConnString.Replace("connection string=\"", "");
    int closingQuotes = query_sinceConnString.IndexOf("\"");

    string connString = query_sinceConnString.Substring(0, closingQuotes);

    StringBuilder sbOperations = new StringBuilder();
    sbOperations.Append(Environment.NewLine);

    StringBuilder sbGroups= new StringBuilder();
    sbGroups.Append(Environment.NewLine);

    using (SqlConnection sqlConnection = new SqlConnection(connString))
    {
        SqlCommand getOperations = new SqlCommand(@"SELECT * FROM dbo.Operation", sqlConnection);
        sqlConnection.Open();

        var reader = getOperations.ExecuteReader();
        while (reader.Read())
        {
            sbOperations.Append(string.Format("\t\t{0} = {1},{2}",reader.GetString(1),reader.GetInt32(0),Environment.NewLine));
        }

        SqlCommand getGroups = new SqlCommand(@"SELECT * FROM dbo.OperationGroup", sqlConnection);
        
        reader = getGroups.ExecuteReader();
        while (reader.Read())
        {
            sbGroups.Append(string.Format("\t\t{0} = {1},{2}",reader.GetString(4),reader.GetInt32(0),Environment.NewLine));
        }

    }
#>//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace <#=domainNamespace#>
{
    public enum Operations
    {<#=        sbOperations.ToString()#>    }

    public enum OperationGroups
    {<#=        sbGroups.ToString()#>    }
}